{
    "logging": {
        "job_id": "osm",
        "job_name": "Reinforcement learning Osm",
        "logging_frequency": 10,
        "logging_path": "/content/drive/MyDrive/Code/OpenSourceMalaria/Series4/Output/batch_02/progress.log",
        "recipient": "local",
        "resultdir": "/content/drive/MyDrive/Code/OpenSourceMalaria/Series4/Output/batch_02/results",
        "sender": "http://0.0.0.1"
    },
    "parameters": {
        "diversity_filter": {
            "minscore": 0.4,
            "minsimilarity": 0.4,
            "name": "IdenticalMurckoScaffold",
            "nbmax": 25
        },
        "inception": {
            "memory_size": 100,
            "sample_size": 10,
            "smiles": []
        },
        "reinforcement_learning": {
            "agent": "/content/drive/MyDrive/Code/OpenSourceMalaria/Series4/Output/batch_01/results/Agent.ckpt",
            "batch_size": 128,
            "learning_rate": 0.0001,
            "margin_threshold": 50,
            "n_steps": 500,
            "prior": "/content/drive/MyDrive/Code/OpenSourceMalaria/Series4/Reinvent/data/augmented.prior",
            "reset": 0,
            "reset_score_cutoff": 0.5,
            "sigma": 128
        },
        "scoring_function": {
            "name": "custom_product",
            "parallel": false,
            "parameters": [
                {
                    "component_type": "matching_substructure",
                    "model_path": null,
                    "name": "MatchCoreSubstr",
                    "smiles": [
                        "*-c1nnc2cncc(-*)n12"
                    ],
                    "weight": 2
                },
                {
                    "component_type": "custom_alerts",
                    "model_path": null,
                    "name": "RestrictedSubstructure",
                    "smiles": [
                        "*-c1cn2cn(-*)n(-*)c2c(-*)n1-*",
                        "*-c1cn2cn(-*)n(-*)c2c(-*)n1",
                        "*-c1cn2cn(-*)n(-*)c2cn1-*",
                        "*-c1cn2cn(-*)nc2c(-*)n1-*",
                        "*-c1cn2cnn(-*)c2c(-*)n1-*",
                        "*-c1n(-*)ccn2cn(-*)n(-*)c12",
                        "*-c1cn2cnnc2c(-*)n1-*",
                        "*-c1cn2cnn(-*)c2cn1-*",
                        "*-c1cn2cn(-*)n(-*)c2cn1",
                        "*-c1cn2cnn(-*)c2c(-*)n1",
                        "*-c1cn2cn(-*)nc2c(-*)n1",
                        "*-c1cn2cn(-*)n(-*)c2cn1",
                        "*-c1n(-*)ccn2cnn(-*)c12",
                        "*-c1n(-*)ccn2cn(-*)nc12",
                        "*-n1cn2ccn(-*)cc2n1-*",
                        "*-c1nccn2cn(-*)n(-*)c12",
                        "*-c1cn2cn(-*)nc2cn1",
                        "*-c1cn2cnn(-*)c2cn1",
                        "*-c1cn2cnnc2c(-*)n1",
                        "*-c1cn2cnnc2cn1-*",
                        "*-c1n(-*)ccn2cnnc12",
                        "*-n1ncn2ccn(-*)cc12",
                        "*-n1cn2ccn(-*)cc2n1",
                        "*-c1nccn2cnn(-*)c12",
                        "*-c1nccn2cn(-*)nc12",
                        "*-n1cn2ccncc2n1-*",
                        "*-n1cn2ccncc2n1",
                        "*-n1ncn2ccncc12",
                        "*-c1nccn2cnnc12",
                        "*-n1ccn2cnnc2c1",
                        "*-c1cn2cnnc2cn1"
                    ],
                    "weight": 2
                },
                {
                    "component_type": "molecular_weight",
                    "model_path": null,
                    "name": "MWt",
                    "smiles": [],
                    "specific_parameters": {
                        "coef_div": 2000,
                        "coef_se": 100,
                        "coef_si": 100,
                        "high": 500,
                        "low": 400,
                        "transformation": true,
                        "transformation_type": "double_sigmoid"
                    },
                    "weight": 2
                }
            ]
        }
    },
    "run_type": "reinforcement_learning",
    "version": 2
}